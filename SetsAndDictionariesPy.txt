# Нахождение наибольшего и наименьшего числа из списка.
def find_min_max(numbers):
    if len(numbers) == 0:
        return None, None
    min_num = numbers[0]
    max_num = numbers[0]
    for num in numbers:
        if num < min_num:
            min_num = num
        if num > max_num:
            max_num = num
    return min_num, max_num


user_input = input("Введите список чисел, но через пробел: ")
numbers = user_input.split()
try:
    numbers = [int(num) for num in numbers]
    min_num, max_num = find_min_max(numbers)
    print(f"Наименьшее число: {min_num}")
    print(f"Наибольшее число: {max_num}")
except ValueError:
    print("Ошибка: некорректный ввод чисел! Возможно вы ввели случайно букву.")
print("________________")


# Сортировка списка слов в алфавитном порядке.
def sort_words(words):
    return sorted(words)


user_input = input("Введите список слов, позже данные слова напишутся в столбик в алфавитном порядке: ")
words = user_input.split()
sorted_words = sort_words(words)
print("Список слов в алфавитном порядке:")
for word in sorted_words:
    print(word)
print("________________")

# Преобразование словаря в список кортежей.
students = {
    "Максим": 3,
    "Александр": 5,
    "Марк": 4
}
students_tuples = [(name, grade) for name, grade in students.items()]
print("Список кортежей студентов (имя, оценка):")
for student_tuple in students_tuples:
    print(f"Имя: {student_tuple[0]}, Оценка: {student_tuple[1]}")
print("________________")


# Вывод уникальных слов из текста.
def unique_words(text):
    return set(text.split())


user_input = input("Введите текст для вывода уникальных слов: ")
unique = unique_words(user_input)
print("Уникальные слова:")
for word in unique:
    print(word)
print("________________")

# Нахождение пересечения двух множеств. Но не понятно, пользователь должен выводить сам заданные числа или уже готовые?
set1 = {2, 5, 3, 4}
set2 = {4, 1, 3, 9}
intersection = set1.intersection(set2)
print("Пересечение множеств:", intersection)
print("________________")


# Работа со словарем сотрудников компании.
class Company:
    def __init__(self):
        self.employees = {}

    def add_employee(self, name):
        if isinstance(name, str):
            self.employees[name] = True

    def remove_employee(self, name):
        if name in self.employees:
            del self.employees[name]

    def get_employees(self):
        return list(self.employees.keys())


company = Company()
company.add_employee("- Максим")
company.add_employee("- Александр")
company.add_employee("- Марк")
print("Список сотрудников на данный момент:")
for employee in company.get_employees():
    print(employee)
print("________________")

company.remove_employee("- Максим")
print("Список сотрудников после удаления сотрудника:")
for employee in company.get_employees():
    print(employee)
print("________________")
